openapi: 3.0.3
info:
  title: meteringData
  version: 0.1.0
  description: API to create, read, and update meter readings.
paths:
  /api/v1/meter-data/search:
    post:
      operationId: find-meter-data
      summary: Find meter data by meter and customer EIC, period, and optionally resolution
      security:
        - JWTAuth: []
      parameters:
        - in: header
          name: x-document-date-time
          description: Document creation timestamp
          required: true
          schema:
            $ref: '#/components/headers/x-document-date-time'
        - in: header
          name: x-document-identification
          description: Document unique identification
          required: true
          schema:
            $ref: '#/components/headers/x-document-identification'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/meterAttributes'
      description: >-
        Submit the meter identifications, timeframe, and the purpose to receive the meter reading data
      responses:
        '200':
          description: OK
          headers:
            status:
              description: HTTP status code
              schema:
                $ref: '#/components/headers/status'
            x-document-date-time:
              description: Document creation timestamp
              schema:
                $ref: '#/components/headers/x-document-date-time'
            x-document-identification:
              description: Document unique identification
              schema:
                $ref: '#/components/headers/x-document-identification'
            x-original-document-identification:
              description: Request document unique identification
              schema:
                $ref: '#/components/headers/x-document-identification'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/meterData'
        "400":
          $ref: '#/components/responses/badRequest'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/notFound'
        "422":
          $ref: '#/components/responses/unprocessableEntity'
  /api/v1/meter-data:
    post:
      operationId: request-meter-data
      summary: Create meter reading data
      security:
        - JWTAuth: []
      parameters:
        - in: header
          name: x-document-date-time
          description: Document creation timestamp
          required: true
          schema:
            $ref: '#/components/headers/x-document-date-time'
        - in: header
          name: x-document-identification
          description: Document unique identification
          required: true
          schema:
            $ref: '#/components/headers/x-document-identification'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/meterData'
        description: >-
          Submit the meter reading data object to create the meter reading
      responses:
        '200':
          description: OK
          headers:
            status:
              description: HTTP status code
              schema:
                $ref: '#/components/headers/status'
            x-document-date-time:
              description: Document creation timestamp
              schema:
                $ref: '#/components/headers/x-document-date-time'
            x-document-identification:
              description: Document unique identification
              schema:
                $ref: '#/components/headers/x-document-identification'
            x-original-document-identification:
              description: Request document unique identification
              schema:
                $ref: '#/components/headers/x-document-identification'
        "400":
          $ref: '#/components/responses/badRequest'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "422":
          $ref: '#/components/responses/unprocessableEntity'
    put:
      operationId: update-meter-data
      summary: Update meter reading data
      security:
        - JWTAuth: []
      parameters:
        - in: header
          name: x-document-date-time
          description: Document creation timestamp
          required: true
          schema:
            $ref: '#/components/headers/x-document-date-time'
        - in: header
          name: x-document-identification
          description: Document unique identification
          required: true
          schema:
            $ref: '#/components/headers/x-document-identification'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/meterData'
        description: >-
          Submit the meter reading data object to update the meter reading
      responses:
        '200':
          description: OK
          headers:
            status:
              description: HTTP status code
              schema:
                $ref: '#/components/headers/status'
            x-document-date-time:
              description: Document creation timestamp
              schema:
                $ref: '#/components/headers/x-document-date-time'
            x-document-identification:
              description: Document unique identification
              schema:
                $ref: '#/components/headers/x-document-identification'
            x-original-document-identification:
              description: Request document unique identification
              schema:
                $ref: '#/components/headers/x-document-identification'
        "400":
          $ref: '#/components/responses/badRequest'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/notFound'
        "422":
          $ref: '#/components/responses/unprocessableEntity'
  /api/v1/meter-data/status:
    get:
      operationId: find-meter-data-status
      summary: Find meter data processing status by document and issuer identification
      security:
        - JWTAuth: []
      parameters:
        - in: header
          name: x-document-date-time
          description: Document creation timestamp
          required: true
          schema:
            $ref: '#/components/headers/x-document-date-time'
        - in: header
          name: x-document-identification
          description: Document unique identification
          required: true
          schema:
            $ref: '#/components/headers/x-document-identification'
        - in: query
          name: originalDocumentIdentification
          description: Request document unique identification
          required: true
          schema:
            $ref: '#/components/schemas/eic'
        - in: query
          name: issuerEic
          description: Request issuer EIC identification
          required: true
          schema:
            $ref: '#/components/schemas/eic'
      description: >-
        Submit the issuer and document identification to receive the processing status
      responses:
        '200':
          description: OK
          headers:
            status:
              description: HTTP status code
              schema:
                $ref: '#/components/headers/status'
            x-document-date-time:
              description: Document creation timestamp
              schema:
                $ref: '#/components/headers/x-document-date-time'
            x-document-identification:
              description: Document unique identification
              schema:
                $ref: '#/components/headers/x-document-identification'
            x-original-document-identification:
              description: Request document unique identification
              schema:
                $ref: '#/components/headers/x-document-identification'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        "400":
          $ref: '#/components/responses/badRequest'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/notFound'
        "422":
          $ref: '#/components/responses/unprocessableEntity'
  /api/v1/meter-data/change:
    get:
      operationId: find-meter-data-change
      summary: Find metering points where data was changed within the defined period
      security:
        - JWTAuth: []
      parameters:
        - in: header
          name: x-document-date-time
          description: Document creation timestamp
          required: true
          schema:
            $ref: '#/components/headers/x-document-date-time'
        - in: header
          name: x-document-identification
          description: Document unique identification
          required: true
          schema:
            $ref: '#/components/headers/x-document-identification'
        - in: query
          name: updatePeriodStart
          description: Meter reading modification start datetime
          required: true
          schema:
            $ref: '#/components/schemas/dateTime'
        - in: query
          name: updatePeriodEnd
          description: Meter reading modification end datetime
          required: true
          schema:
            $ref: '#/components/schemas/dateTime'
        - in: query
          name: serviceProviderEic
          description: RService provider EIC identification
          required: true
          schema:
            $ref: '#/components/schemas/eic'
      description: >-
        Submit the modification period to receive a list of metering points where data has changed during the marked time interval
      responses:
        '200':
          description: OK
          headers:
            status:
              description: HTTP status code
              schema:
                $ref: '#/components/headers/status'
            x-document-date-time:
              description: Document creation timestamp
              schema:
                $ref: '#/components/headers/x-document-date-time'
            x-document-identification:
              description: Document unique identification
              schema:
                $ref: '#/components/headers/x-document-identification'
            x-original-document-identification:
              description: Request document unique identification
              schema:
                $ref: '#/components/headers/x-document-identification'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/meterUpdates'
        "400":
          $ref: '#/components/responses/badRequest'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/notFound'
        "422":
          $ref: '#/components/responses/unprocessableEntity'  
components:
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |-
        Example:
        > Authorization: Bearer <token>
  schemas:
    dateTime:
      type: string
      format: datetime
      description: ISO 8601 zone datetime
      # RegEx to verify the yyyy-MM-ddTHH:mm:ssZ format
      pattern: >-
        [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(\.[0-9]+)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?
    uniqueId:
      type: string
      format: uuid
      description: UUID
      minLength: 36
      maxLength: 36
      # RegEx to verify the UUID format
      pattern: >-
        ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
    statusCode:
      type: integer
      description: HTTP status code
      minLength: 3
      maxLength: 3
    eic:
      type: string
      format: eic
      description: EIC code
      minLength: 16
      maxLength: 16
      # RegEx to verify the EIC format, semantic verification is part of content validation
      pattern: >-
        \d{2}[XYZWTVA][A-Z0-9\-]{12}[A-Z0-9]
    status:
      type: object
      properties:
        statusCode:
          $ref: '#/components/schemas/statusCode'
        reasonText:
          type: string
          description: Textual reason of the response
    readingType:
      type: string
      description: Meter reading quality type
      enum: [ESTIMATED, METERED]
    resolution:
      type: string
      enum: [PT15M, PT1H, P1D]
    meterData:
      type: array
      items:
        $ref: '#/components/schemas/accountTimeSeries'
    accountTimeSeries:
      type: object
      properties:
        meterEic:
          $ref: '#/components/schemas/eic'
        period:
          type: array
          items:
            $ref: '#/components/schemas/period'
      required:
        - meterEic
        - period
    period:
      type: object
      properties:
        periodStart:
          $ref: '#/components/schemas/dateTime'
        periodEnd:
          $ref: '#/components/schemas/dateTime'
        resolution:
          $ref: '#/components/schemas/resolution'
        billingSequence:
          type: integer
        accountInterval:
          type: array
          items:
            $ref: '#/components/schemas/accountInterval'
      required:
        - periodStart
        - periodEnd
        - resolution
        - accountInterval
    accountInterval:
      type: object
      description: Meter reading period item
      properties:
        pos:
          type: integer
          minimum: 1
        measurement:
          type: array
          items:
            $ref: '#/components/schemas/measurement'
      required:
        - pos
        - measurement
    measurement:
      type: object
      description: Measurement result
      properties:
        measurementUnit:
          type: string
          enum: [KWH, M3]
        in:
          type: number
          format: decimal
          minimum: 0
          multipleOf: 0.001
        inType:
          $ref: '#/components/schemas/readingType'
        out:
          type: number
          format: decimal
          minimum: 0
          multipleOf: 0.001
        outType:
          $ref: '#/components/schemas/readingType'
    meterAttributes:
      type: object
      description: Attributes to request meter readings
      properties:
        customerEic:
          $ref: '#/components/schemas/eic'
        serviceProviderEic:
          $ref: '#/components/schemas/eic'
        meterEic:
          $ref: '#/components/schemas/eic'
        periodStart:
          $ref: '#/components/schemas/dateTime'
        periodEnd:
          $ref: '#/components/schemas/dateTime'
        # Is purpose required when searching for meter reading data?
        purpose:
          type: string
          maxLength: 50
      required:
        - serviceProviderEic
        - meterEic
        - periodStart
        - periodEnd
        - purpose
    meterUpdates:
      type: object
      description: Meter identification and subject period when data was modified
      properties:
        meterEic:
          $ref: '#/components/schemas/eic'
        periodStart:
          $ref: '#/components/schemas/dateTime'
        periodEnd:
          $ref: '#/components/schemas/dateTime'
      required:
        - meterEic
        - periodStart
        - periodEnd
    badRequest:
      type: object
      description: Bad Request
      properties:
        problem:
          $ref: '#/components/schemas/defaultProblem'
    unauthorized:
      type: object
      description: Unauthorized
      properties:
        problem:
          $ref: '#/components/schemas/defaultProblem'
    forbidden:
      type: object
      description: Forbidden
      properties:
        problem:
          $ref: '#/components/schemas/defaultProblem'
    notFound:
      type: object
      description: Not found
      properties:
        problem:
          $ref: '#/components/schemas/defaultProblem'
    unprocessableEntity:
      type: object
      description: Unprocessable entity
      properties:
        problem:
          $ref: '#/components/schemas/defaultProblem'
    defaultProblem:
      type: object
      description: Default problem object
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
        status:
          type: integer
          minLength: 3
          maxLength: 3
        detail:
          type: string
        instance:
          type: string
          format: uri
        cause:
          $ref: '#/components/schemas/defaultProblem'
    reasonText:
      type: string
      description: Textual reason of the response
  headers:
    status:
      deprecated: false
      required: false
      schema:
        $ref: '#/components/schemas/statusCode'
    x-document-date-time:
      deprecated: false
      required: true
      schema:
        $ref: '#/components/schemas/dateTime'
    x-document-identification:
      deprecated: false
      required: true
      schema:
        $ref: '#/components/schemas/uniqueId'
    x-original-document-identification:
      deprecated: false
      required: false
      schema:
        $ref: '#/components/schemas/uniqueId'
    WWW-Authenticate:
      deprecated: false
      required: false
      schema:
        $ref: '#/components/schemas/reasonText'
  responses:
    badRequest:
      description: Bad Request
      headers:
        status:
          description: HTTP status code
          schema:
            $ref: '#/components/headers/status'
        x-document-date-time:
          description: Document creation timestamp
          schema:
            $ref: '#/components/headers/x-document-date-time'
        x-document-identification:
          description: Document unique identification
          schema:
            $ref: '#/components/headers/x-document-identification'
        x-original-document-identification:
          description: Request document unique identification
          schema:
            $ref: '#/components/headers/x-document-identification'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/badRequest'
    unauthorized:
      description: Unauthorized
      headers:
        status:
          description: HTTP status code
          schema:
            $ref: '#/components/headers/status'
        x-document-date-time:
          description: Document creation timestamp
          schema:
            $ref: '#/components/headers/x-document-date-time'
        x-document-identification:
          description: Document unique identification
          schema:
            $ref: '#/components/headers/x-document-identification'
        x-original-document-identification:
          description: Request document unique identification
          schema:
            $ref: '#/components/headers/x-document-identification'
        WWW-Authenticate:
          description: The required authentication method should be used to gain access to the resource
          schema:
            $ref: '#/components/headers/WWW-Authenticate'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/unauthorized'
    forbidden:
      description: Forbidden
      headers:
        status:
          description: HTTP status code
          schema:
            $ref: '#/components/headers/status'
        x-document-date-time:
          description: Document creation timestamp
          schema:
            $ref: '#/components/headers/x-document-date-time'
        x-document-identification:
          description: Document unique identification
          schema:
            $ref: '#/components/headers/x-document-identification'
        x-original-document-identification:
          description: Request document unique identification
          schema:
            $ref: '#/components/headers/x-document-identification'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/forbidden'
    notFound:
      description: Not found
      headers:
        status:
          description: HTTP status code
          schema:
            $ref: '#/components/headers/status'
        x-document-date-time:
          description: Document creation timestamp
          schema:
            $ref: '#/components/headers/x-document-date-time'
        x-document-identification:
          description: Document unique identification
          schema:
            $ref: '#/components/headers/x-document-identification'
        x-original-document-identification:
          description: Request document unique identification
          schema:
            $ref: '#/components/headers/x-document-identification'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/notFound'
    unprocessableEntity:
      description: Unprocessable entity
      headers:
        status:
          description: HTTP status code
          schema:
            $ref: '#/components/headers/status'
        x-document-date-time:
          description: Document creation timestamp
          schema:
            $ref: '#/components/headers/x-document-date-time'
        x-document-identification:
          description: Document unique identification
          schema:
            $ref: '#/components/headers/x-document-identification'
        x-original-document-identification:
          description: Request document unique identification
          schema:
            $ref: '#/components/headers/x-document-identification'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/unprocessableEntity'
servers:
  - url: https://test-newavp.elering.ee
security:
  - JWTAuth: []