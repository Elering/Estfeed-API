openapi: 3.0.3
info:
  title: Joint invoice
  version: 0.2.0
  description: API to create and read invoices forwarded via the Datahub.
tags:
  - name: Joint invoice
    description: API to create and read invoices forwarded via the Datahub.
paths:
  /api/v1/joint-invoice/search:
    post:
      tags:
        - Joint invoice
      operationId: find-joint-invoice
      summary: Find a forwarded invoice
      security:
        - JWTAuth: []
      parameters:
        - in: header
          name: x-document-date-time
          description: Document creation timestamp
          required: true
          schema:
            $ref: '#/components/schemas/dateTime'
        - in: header
          name: x-document-identification
          description: Document unique identification
          required: true
          schema:
            $ref: '#/components/schemas/uniqueId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                marketParticipantContext:
                  $ref: '#/components/schemas/marketParticipantContext'
                jointInvoiceAttributes:
                  $ref: '#/components/schemas/jointInvoiceAttributes'
                pagination:
                  $ref: '#/components/schemas/pagingRequest'
              required:
                - marketParticipantContext
                - jointInvoiceAttributes
                - pagination
      description: >-
        Submit the invoice attributes to find the list of forwarded invoices     
      responses:
        '200':
          description: OK
          headers:
            status:
              description: HTTP status code
              schema:
                $ref: '#/components/schemas/statusCode'
            x-document-date-time:
              description: Document creation timestamp
              schema:
                $ref: '#/components/schemas/dateTime'
            x-document-identification:
              description: Document unique identification
              schema:
                $ref: '#/components/schemas/uniqueId'
            x-original-document-identification:
              description: Request document unique identification
              schema:
                $ref: '#/components/schemas/uniqueId'
          content:
            application/json:
              schema:
                type: object
                properties:
                  jointInvoiceList:
                    type: array
                    minItems: 1
                    items:
                      $ref: '#/components/schemas/jointInvoiceListItem'
                  pagination:
                    $ref: '#/components/schemas/pagingResponse'
                required:
                  - jointInvoiceList
                  - pagination
        "400":
          $ref: '#/components/responses/badRequest'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/notFound'
        "422":
          $ref: '#/components/responses/unprocessableEntity'
  /api/v1/joint-invoice/download:
    post:
      tags:
        - Joint invoice
      operationId: download-joint-invoice
      summary: Download a forwarded invoice
      security:
        - JWTAuth: []
      parameters:
        - in: header
          name: x-document-date-time
          description: Document creation timestamp
          required: true
          schema:
            $ref: '#/components/schemas/dateTime'
        - in: header
          name: x-document-identification
          description: Document unique identification
          required: true
          schema:
            $ref: '#/components/schemas/uniqueId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                marketParticipantContext:
                  $ref: '#/components/schemas/marketParticipantContext'
                invoiceId:
                  $ref: '#/components/schemas/uniqueId'
              required:
                - marketParticipantContext
                - invoiceId
      description: >-
        Submit the invoice ID to download the forwarded invoices   
      responses:
        '200':
          description: OK
          headers:
            status:
              description: HTTP status code
              schema:
                $ref: '#/components/schemas/statusCode'
            x-document-date-time:
              description: Document creation timestamp
              schema:
                $ref: '#/components/schemas/dateTime'
            x-document-identification:
              description: Document unique identification
              schema:
                $ref: '#/components/schemas/uniqueId'
            x-original-document-identification:
              description: Request document unique identification
              schema:
                $ref: '#/components/schemas/uniqueId'
          content:
            application/octet-stream:
              schema:
                # a binary file of any type
                type: string
                format: binary
        "400":
          $ref: '#/components/responses/badRequest'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/notFound'
        "422":
          $ref: '#/components/responses/unprocessableEntity'
  /api/v1/joint-invoice:
    post:
      tags:
        - Joint invoice
      operationId: request-joint-invoice
      summary: Create a forwarded invoice
      security:
        - JWTAuth: []
      parameters:
        - in: header
          name: x-document-date-time
          description: Document creation timestamp
          required: true
          schema:
            $ref: '#/components/schemas/dateTime'
        - in: header
          name: x-document-identification
          description: Document unique identification
          required: true
          schema:
            $ref: '#/components/schemas/uniqueId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                marketParticipantContext:
                  $ref: '#/components/schemas/marketParticipantContext'
                jointInvoice:
                  $ref: '#/components/schemas/jointInvoice'
              required:
                - marketParticipantContext
                - jointInvoice
        description: >-
          Submit the invoice object to hand over the invoice
      responses:
        '201':
          description: Created
          headers:
            status:
              description: HTTP status code
              schema:
                $ref: '#/components/schemas/statusCode'
            x-document-date-time:
              description: Document creation timestamp
              schema:
                $ref: '#/components/schemas/dateTime'
            x-document-identification:
              description: Document unique identification
              schema:
                $ref: '#/components/schemas/uniqueId'
            x-original-document-identification:
              description: Request document unique identification
              schema:
                $ref: '#/components/schemas/uniqueId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uniqueId'
        "400":
          $ref: '#/components/responses/badRequest'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "422":
          $ref: '#/components/responses/unprocessableEntity'
  /api/v1/forward-invoice/delete:
    post:
      tags:
        - Joint invoice
      operationId: delete-joint-invoice
      summary: Delete a forwarded invoice
      security:
        - JWTAuth: []
      parameters:
        - in: header
          name: x-document-date-time
          description: Document creation timestamp
          required: true
          schema:
            $ref: '#/components/schemas/dateTime'
        - in: header
          name: x-document-identification
          description: Document unique identification
          required: true
          schema:
            $ref: '#/components/schemas/uniqueId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                marketParticipantContext:
                  $ref: '#/components/schemas/marketParticipantContext'
                invoiceId:
                  $ref: '#/components/schemas/uniqueId'
              required:
                - marketParticipantContext
                - invoiceId
      description: >-
        Submit the invoice ID to delete the invoices   
      responses:
        '200':
          description: OK
          headers:
            status:
              description: HTTP status code
              schema:
                $ref: '#/components/schemas/statusCode'
            x-document-date-time:
              description: Document creation timestamp
              schema:
                $ref: '#/components/schemas/dateTime'
            x-document-identification:
              description: Document unique identification
              schema:
                $ref: '#/components/schemas/uniqueId'
            x-original-document-identification:
              description: Request document unique identification
              schema:
                $ref: '#/components/schemas/uniqueId'
        "400":
          $ref: '#/components/responses/badRequest'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/notFound'
        "422":
          $ref: '#/components/responses/unprocessableEntity'
  /api/v1/forward-invoice/change:
    post:
      tags:
        - Joint invoice
      operationId: find-joint-invoice-change
      summary: Find a forwarded invoice received since a given point in time
      security:
        - JWTAuth: []
      parameters:
        - in: header
          name: x-document-date-time
          description: Document creation timestamp
          required: true
          schema:
            $ref: '#/components/schemas/dateTime'
        - in: header
          name: x-document-identification
          description: Document unique identification
          required: true
          schema:
            $ref: '#/components/schemas/uniqueId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                marketParticipantContext:
                  $ref: '#/components/schemas/marketParticipantContext'
                updatePeriodStart:
                  $ref: '#/components/schemas/dateTime'
                pagination:
                  $ref: '#/components/schemas/pagingRequest'
              required:
                - marketParticipantContext
                - updatePeriodStart
                - pagination
      description: >-
        Submit the service provider (as part of the marketParticipantContext) and the start datetime to receive the list of invoices uploaded dince that time.
      responses:
        '200':
          description: OK
          headers:
            status:
              description: HTTP status code
              schema:
                $ref: '#/components/schemas/statusCode'
            x-document-date-time:
              description: Document creation timestamp
              schema:
                $ref: '#/components/schemas/dateTime'
            x-document-identification:
              description: Document unique identification
              schema:
                $ref: '#/components/schemas/uniqueId'
            x-original-document-identification:
              description: Request document unique identification
              schema:
                $ref: '#/components/schemas/uniqueId'
          content:
            application/json:
              schema:
                type: object
                properties:
                  jointInvoiceList:
                    type: array
                    minItems: 1
                    items:
                      $ref: '#/components/schemas/jointInvoiceListItem'
                  pagination:
                    $ref: '#/components/schemas/pagingResponse'
                required:
                  - jointInvoiceList
                  - pagination
        "400":
          $ref: '#/components/responses/badRequest'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/notFound'
        "422":
          $ref: '#/components/responses/unprocessableEntity'
components:
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |-
        Example:
        > Authorization: Bearer <token>        
  schemas:
    dateTime:
      type: string
      format: date-time
      description: ISO 8601 zone datetime
    uniqueId:
      type: string
      format: uuid
      description: UUID
    statusCode:
      type: integer
      description: HTTP status code
      minLength: 3
      maxLength: 3
    eic:
      type: string
      format: eic
      description: EIC code
      minLength: 16
      maxLength: 16
      # RegEx to verify the EIC format, semantic verification is part of content validation
      pattern: >-
        \d{2}[XYZWTVA][A-Z0-9\-]{12}[A-Z0-9]
    marketParticipantRole:
      type: string
      enum: [ OPEN_SUPPLIER, GRID_OPERATOR, LINE_OPERATOR, CLOSED_DISTRIBUTION_NETWORK, PRODUCER_OPERATOR, CHARGING_POINT_OPERATOR, AGGREGATOR,  ENERGY_SERVICE_PROVIDER ]
    commodityType:
      type: string
      enum: [ELECTRICITY, NATURAL_GAS]
    jointInvoiceAttributes:
      type: object
      properties:
        invoiceId:
          $ref: '#/components/schemas/uniqueId'
        senderEic:
          $ref: '#/components/schemas/eic'
        receiverEic:
          $ref: '#/components/schemas/eic'
        customerEic:
          $ref: '#/components/schemas/eic'
        meterEic:
          $ref: '#/components/schemas/eic'
        dataPeriodStart:
          $ref: '#/components/schemas/dateTime'
        dataPeriodEnd:
          $ref: '#/components/schemas/dateTime'
        periodStart:
          $ref: '#/components/schemas/dateTime'
        periodEnd:
          $ref: '#/components/schemas/dateTime'
        unread:
          type: boolean
    jointInvoiceListItem:
      type: object
      properties:
        invoiceId:
          $ref: '#/components/schemas/uniqueId'
        senderEic:
          $ref: '#/components/schemas/eic'
        timestamp:
          $ref: '#/components/schemas/dateTime'
        receiverEic:
          $ref: '#/components/schemas/eic'
        customerEic:
          $ref: '#/components/schemas/eic'
        meterEic:
          $ref: '#/components/schemas/eic'
        dataPeriodStart:
          $ref: '#/components/schemas/dateTime'
        dataPeriodEnd:
          $ref: '#/components/schemas/dateTime'
        unread:
          type: boolean
      required:
        - invoiceId
        - timestamp
        - senderEic
        - receiverEic
        - customerEic
        - meterEic
        - dataPeriodStart
        - dataPeriodEnd
        - unread
    jointInvoiceHeaders:
      type: object
      properties:
        senderEic:
          $ref: '#/components/schemas/eic'
        receiverEic:
          $ref: '#/components/schemas/eic'
        customerEic:
          $ref: '#/components/schemas/eic'
        meterEic:
          $ref: '#/components/schemas/eic'
        dataPeriodStart:
          $ref: '#/components/schemas/dateTime'
        dataPeriodEnd:
          $ref: '#/components/schemas/dateTime'
      required:
        - invoiceId
        - senderEic
        - receiverEic
        - customerEic
        - meterEic
        - dataPeriodStart
        - dataPeriodEnd
    jointInvoice:
      type: object
      properties:
        forwardInvoiceHeaders:
          $ref: '#/components/schemas/jointInvoiceHeaders'
        invoice:
          type: string
          format: binary
      required:
        - forwardInvoiceHeaders
        - invoice
    marketParticipantContext:
      type: object
      properties:
        marketParticipantIdentification:
          $ref: '#/components/schemas/eic'
        marketParticipantRole:
          $ref: '#/components/schemas/marketParticipantRole'
        purpose:
          type: string
          maxLength: 50
        commodityType:
          $ref: '#/components/schemas/commodityType'
      required:
        - marketParticipantIdentification
        - marketParticipantRole
        - commodityType
    pagingRequest:
      type: object
      description: Pagination controls
      properties:
        page:
          type: integer
          minimum: 0
        pageSize:
          type: integer
          minimum: 1
      required:
        - page
        - pageSize
    pagingResponse:
      type: object
      description: Pagination controls
      properties:
        page:
          type: integer
          minimum: 0
        totalPages:
          type: integer
          minimum: 1
    badRequest:
      type: object
      description: Bad Request
      properties:
        problem:
          $ref: '#/components/schemas/defaultProblem'
    unauthorized:
      type: object
      description: Unauthorized
      properties:
        problem:
          $ref: '#/components/schemas/defaultProblem'
    forbidden:
      type: object
      description: Forbidden
      properties:
        problem:
          $ref: '#/components/schemas/defaultProblem'
    notFound:
      type: object
      description: Not found
      properties:
        problem:
          $ref: '#/components/schemas/defaultProblem'
    unprocessableEntity:
      type: object
      description: Unprocessable entity
      properties:
        problem:
          $ref: '#/components/schemas/defaultProblem'
    defaultProblem:
      type: object
      description: Default problem object
      properties:
        code:
          type: string
        message:
          type: string
        cause:
          $ref: '#/components/schemas/defaultProblem'
  responses:
    badRequest:
      description: Bad Request
      headers:
        status:
          description: HTTP status code
          schema:
            $ref: '#/components/schemas/statusCode'
        x-document-date-time:
          description: Document creation timestamp
          schema:
            $ref: '#/components/schemas/dateTime'
        x-document-identification:
          description: Document unique identification
          schema:
            $ref: '#/components/schemas/uniqueId'
        x-original-document-identification:
          description: Request document unique identification
          schema:
            $ref: '#/components/schemas/uniqueId'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/badRequest'
    unauthorized:
      description: Unauthorized
      headers:
        status:
          description: HTTP status code
          schema:
            $ref: '#/components/schemas/statusCode'
        x-document-date-time:
          description: Document creation timestamp
          schema:
            $ref: '#/components/schemas/dateTime'
        x-document-identification:
          description: Document unique identification
          schema:
            $ref: '#/components/schemas/uniqueId'
        x-original-document-identification:
          description: Request document unique identification
          schema:
            $ref: '#/components/schemas/uniqueId'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/unauthorized'
    forbidden:
      description: Forbidden
      headers:
        status:
          description: HTTP status code
          schema:
            $ref: '#/components/schemas/statusCode'
        x-document-date-time:
          description: Document creation timestamp
          schema:
            $ref: '#/components/schemas/dateTime'
        x-document-identification:
          description: Document unique identification
          schema:
            $ref: '#/components/schemas/uniqueId'
        x-original-document-identification:
          description: Request document unique identification
          schema:
            $ref: '#/components/schemas/uniqueId'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/forbidden'
    notFound:
      description: Not found
      headers:
        status:
          description: HTTP status code
          schema:
            $ref: '#/components/schemas/statusCode'
        x-document-date-time:
          description: Document creation timestamp
          schema:
            $ref: '#/components/schemas/dateTime'
        x-document-identification:
          description: Document unique identification
          schema:
            $ref: '#/components/schemas/uniqueId'
        x-original-document-identification:
          description: Request document unique identification
          schema:
            $ref: '#/components/schemas/uniqueId'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/notFound'
    unprocessableEntity:
      description: Unprocessable entity
      headers:
        status:
          description: HTTP status code
          schema:
            $ref: '#/components/schemas/statusCode'
        x-document-date-time:
          description: Document creation timestamp
          schema:
            $ref: '#/components/schemas/dateTime'
        x-document-identification:
          description: Document unique identification
          schema:
            $ref: '#/components/schemas/uniqueId'
        x-original-document-identification:
          description: Request document unique identification
          schema:
            $ref: '#/components/schemas/uniqueId'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/unprocessableEntity'
servers:
  - url: https://test-datahub.elering.ee
security:
  - JWTAuth: []