openapi: 3.0.3
info:
  title: MeteringPoint
  version: 0.3.0
  description: API to create, read, and update meter information.
tags:
  - name: MeteringPoint
    description: API to create, read, and update agreements.
paths:
  /api/v1/meter/import:
    post:
      tags:
        - MeteringPoint
      operationId: import-meter
      summary: Import meter by attributes
      security:
        - JWTAuth: [ ]
      parameters:
        - in: header
          name: x-document-date-time
          description: Document creation timestamp
          required: true
          schema:
            $ref: '#/components/schemas/dateTime'
        - in: header
          name: x-document-identification
          description: Document unique identification
          required: true
          schema:
            $ref: '#/components/schemas/uniqueId'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                marketParticipantContext:
                  $ref: '#/components/schemas/marketParticipantContext'
                file:
                  # a binary file of any type
                  type: string
                  format: binary
                  nullable: false
            encoding:
              file:
                contentType: application/octet-stream
      responses:
        '200':
          description: OK
          headers:
            status:
              description: HTTP status code
              schema:
                $ref: '#/components/schemas/statusCode'
            x-document-date-time:
              description: Document creation timestamp
              schema:
                $ref: '#/components/schemas/dateTime'
            x-document-identification:
              description: Document unique identification
              schema:
                $ref: '#/components/schemas/uniqueId'
            x-original-document-identification:
              description: Request document unique identification
              schema:
                $ref: '#/components/schemas/uniqueId'
          content:
            application/json:
              schema:
                type: object
                properties:
                  processed:
                    type: array
                    items:
                      $ref: '#/components/schemas/meteringPointEntityResponse'
                  unprocessed:
                    type: array
                    items:
                      properties:
                        rowNumber:
                          type: integer
                        error:
                          $ref: '#/components/schemas/errorResponse'
        "400":
          $ref: '#/components/responses/badRequest'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/notFound'
        "422":
          $ref: '#/components/responses/unprocessableEntity'
components:
  schemas:
    statusCode:
      type: integer
      description: HTTP status code
      minLength: 3
      maxLength: 3
    marketParticipantContext:
      type: object
      properties:
        marketParticipantIdentification:
          $ref: '#/components/schemas/eic'
        marketParticipantRole:
          $ref: '#/components/schemas/serviceProviderRole'
        commodityType:
          $ref: '#/components/schemas/commodityType'
      required:
        - marketParticipantIdentification
        - marketParticipantRole
        - commodityType
    eic:
      type: string
      format: eic
      description: EIC code
      minLength: 16
      maxLength: 16
      # RegEx to verify the EIC format, semantic verification is part of content validation
      pattern: >-
        \d{2}[XYZWTVA][A-Z0-9\-]{12}[A-Z0-9]
    serviceProviderRole:
      type: string
      enum: [ OPEN_SUPPLIER, GRID_OPERATOR, LINE_OPERATOR, CLOSED_DISTRIBUTION_NETWORK, PRODUCER_OPERATOR, CHARGING_POINT_OPERATOR, AGGREGATOR,  ENERGY_SERVICE_PROVIDER ]
    commodityType:
      type: string
      enum: [ ELECTRICITY, NATURAL_GAS ]
    dateTime:
      type: string
      format: date-time
      description: ISO 8601 zone datetime
    uniqueId:
      type: string
      format: uuid
      description: UUID
    consumptionScale:
      type: string
      enum: [ SMALL, LARGE ]
    connectionState:
      type: string
      enum: [ CONNECTED, DISCONNECTED ]
    resolutionElectricity:
      type: string
      enum: [ PT15M, PT1H ]
    resolutionGas:
      type: string
      enum: [ PT1H, P1D ]
    customerTypeElectricity:
      type: string
      enum: [ CONSUMER, GRID_OPERATOR, PRODUCER, MICRO, LINE_OPERATOR, ENERGY_STORAGE_UNIT, CHARGING_POINT_OPERATOR ]
    customerTypeGas:
      type: string
      enum: [ CONSUMER, CONSUMER_2, GRID_OPERATOR, PRODUCER, PROTECTED, PROTECTED_OTHER, GENERAL_INTEREST_SERVICE_PROVIDER, POWER_PRODUCER_FROM_GAS, LNG_OPERATOR ]
    production:
      type: boolean
    productionSourceElectricity:
      type: string
      enum: [ SOLAR, WIND, HYDRO, BIOGAS, BIOMASS, NATURAL_GAS, OIL_SHALE, OTHER_RENEWABLE, OTHER_NON_RENEWABLE ]
    productionSourceGas:
      type: string
      enum: [ BIOGAS ]
    transmissionNetworkEic:
      $ref: '#/components/schemas/eic'
    apartmentAssociation:
      type: boolean
    isolatedMeteringPoint:
      type: boolean
    electricalHeating:
      type: boolean
    chargingPoint:
      type: boolean
    filterValue:
      type: number
      format: decimal
      minimum: 0
      multipleOf: 0.01
    filterType:
      type: string
      enum: [ EQUALS, GREATER_THAN, LESS_THAN, GREATER_THAN_OR_EQUALS, LESS_THAN_OR_EQUALS ]
    doubleFilter:
      type: object
      properties:
        filterValue:
          $ref: '#/components/schemas/filterValue'
        filterType:
          $ref: '#/components/schemas/filterType'
      required:
        - filterValue
        - filterType
    storageCapacity:
      type: number
      format: decimal
      minimum: 0
      multipleOf: 0.01
    storageEnergy:
      type: number
      format: decimal
      minimum: 0
      multipleOf: 0.01
    productionCapacity:
      type: number
      format: decimal
      minimum: 0
      multipleOf: 0.01
    transmissionCapacity:
      type: number
      format: decimal
      minimum: 0
      multipleOf: 0.01
    meteringType:
      type: string
      enum: [ REMOTE_READING, VIRTUAL, NON_REMOTE_READING ]
    meteringPointType:
      type: string
      enum: [ BORDER, AGGREGATION, REGULAR, INTERNAL ]
    errorMessage:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
        queue:
          type: string
        traceId:
          type: string
        args:
          type: array
          items:
            type: object
    meteringPointEntityResponse:
      type: object
      properties:
        meteringPoint:
          $ref: '#/components/schemas/meteringPointAttributes'
        meterLocation:
          $ref: '#/components/schemas/meteringPointLocation'
        electricityCharacteristics:
          $ref: '#/components/schemas/electricityCharacteristics'
        naturalGasCharacteristics:
          $ref: '#/components/schemas/naturalGasCharacteristics'
        aggregatorCharacteristics:
          $ref: '#/components/schemas/aggregatorCharacteristics'
    meteringPointAttributes:
      type: object
      description: Common meter metadata after creating metering point
      properties:
        meterEic:
          $ref: '#/components/schemas/eic'
        commodityType:
          $ref: '#/components/schemas/commodityType'
        ownerExternalId:
          type: string
        ownerMarketRole:
          $ref: '#/components/schemas/serviceProviderRole'
        meteringType:
          $ref: '#/components/schemas/meteringType'
        meteringPointType:
          $ref: '#/components/schemas/meteringPointType'
        validFrom:
          $ref: '#/components/schemas/dateTime'
    meteringPointLocation:
      type: object
      description: Location object
      properties:
        adsId:
          type: string
          format: ads-oid
          minLength: 10
          maxLength: 10
          pattern: >-
            (MK|OV|AY|LO|VK|LP|CU|EE|ME|ER|MR)\d{8}
        comment:
          type: string
          maxLength: 255
        county:
          type: string
          maxLength: 255
        municipality:
          type: string
          maxLength: 255
        locality:
          type: string
          maxLength: 255
        streetAddress:
          type: string
          maxLength: 255
        postcode:
          type: string
          maxLength: 50
        latitude:
          type: number
          format: double
          multipleOf: 0.00001
        longitude:
          type: number
          format: double
          multipleOf: 0.00001
    aggregatorCharacteristics:
      type: object
      description: Aggregator characteristics
      properties:
        parentMeterEic:
          $ref: '#/components/schemas/eic'
      required:
        - parentMeterEic
    electricityCharacteristics:
      type: object
      description: Electricity characteristics
      properties:
        consumptionScale:
          $ref: '#/components/schemas/consumptionScale'
        connectionState:
          $ref: '#/components/schemas/connectionState'
        resolution:
          $ref: '#/components/schemas/resolutionElectricity'
        customerType:
          $ref: '#/components/schemas/customerTypeElectricity'
        production:
          $ref: '#/components/schemas/production'
        productionSource:
          $ref: '#/components/schemas/productionSourceElectricity'
        transmissionNetworkEic:
          $ref: '#/components/schemas/transmissionNetworkEic'
        apartmentAssociation:
          $ref: '#/components/schemas/apartmentAssociation'
        isolatedMeteringPoint:
          $ref: '#/components/schemas/isolatedMeteringPoint'
        electricalHeating:
          $ref: '#/components/schemas/electricalHeating'
        chargingPoint:
          $ref: '#/components/schemas/chargingPoint'
        storageCapacity:
          $ref: '#/components/schemas/storageCapacity'
        storageEnergy:
          $ref: '#/components/schemas/storageEnergy'
        productionCapacity:
          $ref: '#/components/schemas/productionCapacity'
        transmissionCapacity:
          $ref: '#/components/schemas/transmissionCapacity'
      required:
        - consumptionScale
        - connectionState
        - resolution
        - customerType
        - production
        - transmissionNetworkEic
        - apartmentAssociation
        - isolatedMeteringPoint
        - electricalHeating
        - chargingPoint
        - storageCapacity
        - storageEnergy
        - productionCapacity
        - transmissionCapacity
    naturalGasCharacteristics:
      type: object
      description: Gas characteristics
      properties:
        consumptionScale:
          $ref: '#/components/schemas/consumptionScale'
        connectionState:
          $ref: '#/components/schemas/connectionState'
        resolution:
          $ref: '#/components/schemas/resolutionGas'
        customerType:
          $ref: '#/components/schemas/customerTypeGas'
        production:
          $ref: '#/components/schemas/production'
        productionSource:
          $ref: '#/components/schemas/productionSourceGas'
        transmissionNetworkEic:
          $ref: '#/components/schemas/transmissionNetworkEic'
        apartmentAssociation:
          $ref: '#/components/schemas/apartmentAssociation'
      required:
        - consumptionScale
        - connectionState
        - resolution
        - customerType
        - production
        - transmissionNetworkEic
        - apartmentAssociation
    errorResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/uniqueId'
        cause:
          $ref: '#/components/schemas/errorMessage'
    badRequest:
      type: object
      description: Bad Request
      properties:
        problem:
          $ref: '#/components/schemas/defaultProblem'
    unauthorized:
      type: object
      description: Unauthorized
      properties:
        problem:
          $ref: '#/components/schemas/defaultProblem'
    forbidden:
      type: object
      description: Forbidden
      properties:
        problem:
          $ref: '#/components/schemas/defaultProblem'
    notFound:
      type: object
      description: Not found
      properties:
        problem:
          $ref: '#/components/schemas/defaultProblem'
    unprocessableEntity:
      type: object
      description: Unprocessable entity
      properties:
        problem:
          $ref: '#/components/schemas/defaultProblem'
    defaultProblem:
      type: object
      description: Default problem object
      properties:
        code:
          type: string
        message:
          type: string
        cause:
          $ref: '#/components/schemas/defaultProblem'
  responses:
    badRequest:
      description: Bad Request
      headers:
        status:
          description: HTTP status code
          schema:
            $ref: '#/components/schemas/statusCode'
        x-document-date-time:
          description: Document creation timestamp
          schema:
            $ref: '#/components/schemas/dateTime'
        x-document-identification:
          description: Document unique identification
          schema:
            $ref: '#/components/schemas/uniqueId'
        x-original-document-identification:
          description: Request document unique identification
          schema:
            $ref: '#/components/schemas/uniqueId'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/badRequest'
    unauthorized:
      description: Unauthorized
      headers:
        status:
          description: HTTP status code
          schema:
            $ref: '#/components/schemas/statusCode'
        x-document-date-time:
          description: Document creation timestamp
          schema:
            $ref: '#/components/schemas/dateTime'
        x-document-identification:
          description: Document unique identification
          schema:
            $ref: '#/components/schemas/uniqueId'
        x-original-document-identification:
          description: Request document unique identification
          schema:
            $ref: '#/components/schemas/uniqueId'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/unauthorized'
    forbidden:
      description: Forbidden
      headers:
        status:
          description: HTTP status code
          schema:
            $ref: '#/components/schemas/statusCode'
        x-document-date-time:
          description: Document creation timestamp
          schema:
            $ref: '#/components/schemas/dateTime'
        x-document-identification:
          description: Document unique identification
          schema:
            $ref: '#/components/schemas/uniqueId'
        x-original-document-identification:
          description: Request document unique identification
          schema:
            $ref: '#/components/schemas/uniqueId'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/forbidden'
    notFound:
      description: Not found
      headers:
        status:
          description: HTTP status code
          schema:
            $ref: '#/components/schemas/statusCode'
        x-document-date-time:
          description: Document creation timestamp
          schema:
            $ref: '#/components/schemas/dateTime'
        x-document-identification:
          description: Document unique identification
          schema:
            $ref: '#/components/schemas/uniqueId'
        x-original-document-identification:
          description: Request document unique identification
          schema:
            $ref: '#/components/schemas/uniqueId'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/notFound'
    unprocessableEntity:
      description: Unprocessable entity
      headers:
        status:
          description: HTTP status code
          schema:
            $ref: '#/components/schemas/statusCode'
        x-document-date-time:
          description: Document creation timestamp
          schema:
            $ref: '#/components/schemas/dateTime'
        x-document-identification:
          description: Document unique identification
          schema:
            $ref: '#/components/schemas/uniqueId'
        x-original-document-identification:
          description: Request document unique identification
          schema:
            $ref: '#/components/schemas/uniqueId'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/unprocessableEntity'
