openapi: 3.0.3
info:
  title: customerEic
  version: 0.1.0
  description: API to create, read, and update customer information.
paths:
  /api/v1/customer:
    get:
      operationId: find-customer
      summary: Find a customer by EIC
      security:
        - JWTAuth: []
      parameters:
        - in: header
          name: x-document-date-time
          description: Document creation timestamp
          required: true
          schema:
            $ref: '#/components/headers/x-document-date-time'
        - in: header
          name: x-document-identification
          description: Document unique identification
          required: true
          schema:
            $ref: '#/components/headers/x-document-identification'
        - in: query
          name: country
          description: Country of the customer identifier
          required: true
          schema:
            $ref: '#/components/schemas/country'
        - in: query
          name: identifier
          description: Identifier of the customer
          required: true
          schema:
            $ref: '#/components/schemas/identifier'
        - in: query
          name: registry
          description: Registry of the customer identifier
          required: true
          schema:
            $ref: '#/components/schemas/registry'
      description: >-
          Submit the customer identification to receive the customer EIC and name
      responses:
        '200':
          description: OK
          headers:
            status:
              description: HTTP status code
              schema:
                $ref: '#/components/headers/status'
            x-document-date-time:
              description: Document creation timestamp
              schema:
                $ref: '#/components/headers/x-document-date-time'
            x-document-identification:
              description: Document unique identification
              schema:
                $ref: '#/components/headers/x-document-identification'
            x-original-document-identification:
              description: Request document unique identification
              schema:
                $ref: '#/components/headers/x-document-identification'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerEic'
        "400":
          $ref: '#/components/responses/badRequest'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/notFound'
        "422":
          $ref: '#/components/responses/unprocessableEntity'
    post:
      operationId: request-customer
      summary: Create customer and receive EIC
      security:
        - JWTAuth: []
      parameters:
        - in: header
          name: x-document-date-time
          description: Document creation timestamp
          required: true
          schema:
            $ref: '#/components/headers/x-document-date-time'
        - in: header
          name: x-document-identification
          description: Document unique identification
          required: true
          schema:
            $ref: '#/components/headers/x-document-identification'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customerPersonal'
        description: >-
          Submit the customer object to create the customer or identify the
          customer and update the name
      responses:
        '201':
          description: Created
          headers:
            status:
              description: HTTP status code
              schema:
                $ref: '#/components/headers/status'
            x-document-date-time:
              description: Document creation timestamp
              schema:
                $ref: '#/components/headers/x-document-date-time'
            x-document-identification:
              description: Document unique identification
              schema:
                $ref: '#/components/headers/x-document-identification'
            x-original-document-identification:
              description: Request document unique identification
              schema:
                $ref: '#/components/headers/x-document-identification'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eic'
        "400":
          $ref: '#/components/responses/badRequest'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "422":
          $ref: '#/components/responses/unprocessableEntity'
    put:
      operationId: update-customer
      summary: Update customer name
      security:
        - JWTAuth: []
      parameters:
        - in: header
          name: x-document-date-time
          description: Document creation timestamp
          required: true
          schema:
            $ref: '#/components/headers/x-document-date-time'
        - in: header
          name: x-document-identification
          description: Document unique identification
          required: true
          schema:
            $ref: '#/components/headers/x-document-identification'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customerPersonal'
        description: >-
          Submit the customer object to identify the customer and update the
          name
      responses:
        '200':
          description: OK
          headers:
            status:
              description: HTTP status code
              schema:
                $ref: '#/components/headers/status'
            x-document-date-time:
              description: Document creation timestamp
              schema:
                $ref: '#/components/headers/x-document-date-time'
            x-document-identification:
              description: Document unique identification
              schema:
                $ref: '#/components/headers/x-document-identification'
            x-original-document-identification:
              description: Request document unique identification
              schema:
                $ref: '#/components/headers/x-document-identification'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eic'
        "400":
          $ref: '#/components/responses/badRequest'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/notFound'
        "422":
          $ref: '#/components/responses/unprocessableEntity'
components:
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |-
        Example: 
        > Authorization: Bearer <token>
  schemas:
    dateTime:
      type: string
      format: datetime
      description: ISO 8601 zone datetime
      # RegEx to verify the yyyy-MM-ddTHH:mm:ssZ format
      pattern: >-
        [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(\.[0-9]+)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?
    uniqueIdentification:
      type: string
      format: uuid
      description: UUID
      minLength: 36
      maxLength: 36
      # RegEx to verify the UUID format
      pattern: >-
        ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
    statusCode:
      type: integer
      description: HTTP status code
      minLength: 3
      maxLength: 3
    eic:
      type: string
      format: eic
      description: EIC code
      minLength: 16
      maxLength: 16
      # RegEx to verify the EIC format, semantic verification is part of content validation
      pattern: >-
        \d{2}[XYZWTVA][A-Z0-9\-]{12}[A-Z0-9]
    country:
      type: string
      enum: [AF, AX, AL, DZ, AS, AD, AO, AI, AQ, AG, AR, AM, AW, AU, AT, AZ, BS, BH, BD, BB, BY, BE, BZ, BJ, BM, BT, BO, BQ, BA, BW, BV, BR, IO, BN, BG, BF, BI, KH, CM, CA, CV, KY, CF, TD, CL, CN, CX, CC, CO, KM, CG, CD, CK, CR, CI, HR, CU, CW, CY, CZ, DK, DJ, DM, DO, EC, EG, SV, GQ, ER, EE, ET, FK, FO, FJ, FI, FR, GF, PF, TF, GA, GM, GE, DE, GH, GI, GR, GL, GD, GP, GU, GT, GG, GN, GW, GY, HT, HM, VA, HN, HK, HU, IS, IN, ID, IR, IQ, IE, IM, IL, IT, JM, JP, JE, JO, KZ, KE, KI, KP, KR, KW, KG, LA, LV, LB, LS, LR, LY, LI, LT, LU, MO, MK, MG, MW, MY, MV, ML, MT, MH, MQ, MR, MU, YT, MX, FM, MD, MC, MN, ME, MS, MA, MZ, MM, NA, NR, NP, NL, NC, NZ, NI, NE, NG, NU, NF, MP, NO, OM, PK, PW, PS, PA, PG, PY, PE, PH, PN, PL, PT, PR, QA, RE, RO, RU, RW, BL, SH, KN, LC, MF, PM, VC, WS, SM, ST, SA, SN, RS, SC, SL, SG, SX, SK, SI, SB, SO, ZA, GS, SS, ES, LK, SD, SR, SJ, SZ, SE, CH, SY, TW, TJ, TZ, TH, TL, TG, TK, TO, TT, TN, TR, TM, TC, TV, UG, UA, AE, GB, US, UM, UY, UZ, VU, VE, VN, VG, VI, WF, EH, YE, ZM, ZW]
    identifier:
      type: string
    registry:
      type: string
      # IS - isikukood, AR - Ã¤riregister, NA - not available (for foreign entities)
      enum: [IS, AR, NA]
    givenName:
      type: string
      maxLength: 100
    surname:
      type: string
      maxLength: 100
    identification:
      type: object
      description: Identification block
      required:
        - country
        - identifier
        - registry
      properties:
        country:
          $ref: '#/components/schemas/country'
        identifier:
          $ref: '#/components/schemas/identifier'
        registry:
          $ref: '#/components/schemas/registry'
    customerPersonal:
      type: object
      description: Customer object with personal identifier
      required:
        - identification
        - givenName
      properties:
        identification:
          $ref: '#/components/schemas/identification'
        givenName:
          $ref: '#/components/schemas/givenName'
        surname:
          $ref: '#/components/schemas/surname'
    customerEic:
      type: object
      description: Customer object with EIC
      required:
        - customerIdentification
      properties:
        customerIdentification:
          $ref: '#/components/schemas/eic'
        givenName:
          $ref: '#/components/schemas/givenName'
        surname:
          $ref: '#/components/schemas/surname'
    badRequest:
      type: object
      description: Bad Request
      properties:
        problem:
            $ref: '#/components/schemas/defaultProblem'
    unauthorized:
      type: object
      description: Unauthorized
      properties:
        problem:
            $ref: '#/components/schemas/defaultProblem'
    forbidden:
      type: object
      description: Forbidden
      properties:
        problem:
            $ref: '#/components/schemas/defaultProblem'
    notFound:
      type: object
      description: Not found
      properties:
        problem:
            $ref: '#/components/schemas/defaultProblem'
    unprocessableEntity:
      type: object
      description: Unprocessable entity
      properties:
        problem:
            $ref: '#/components/schemas/defaultProblem'
    defaultProblem:
      type: object
      description: Default problem object
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
        status:
          type: integer
          minLength: 3
          maxLength: 3
        detail:
          type: string
        instance:
          type: string
          format: uri
        cause:
          $ref: '#/components/schemas/defaultProblem'
    reasonText:
      type: string
      description: Textual reason of the response
  headers:
    status:
      deprecated: false
      required: false
      schema:
        $ref: '#/components/schemas/statusCode'
    x-document-date-time:
      deprecated: false
      required: true
      schema:
        $ref: '#/components/schemas/dateTime'
    x-document-identification:
      deprecated: false
      required: true
      schema:
        $ref: '#/components/schemas/uniqueIdentification'
    x-original-document-identification:
      deprecated: false
      required: false
      schema:
        $ref: '#/components/schemas/uniqueIdentification'
    WWW-Authenticate:
      deprecated: false
      required: false
      schema:
        $ref: '#/components/schemas/reasonText'
  responses:
    badRequest:
      description: Bad Request
      headers:
        status:
          description: HTTP status code
          schema:
            $ref: '#/components/headers/status'
        x-document-date-time:
          description: Document creation timestamp
          schema:
            $ref: '#/components/headers/x-document-date-time'
        x-document-identification:
          description: Document unique identification
          schema:
            $ref: '#/components/headers/x-document-identification'
        x-original-document-identification:
          description: Request document unique identification
          schema:
            $ref: '#/components/headers/x-document-identification'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/badRequest'
    unauthorized:
      description: Unauthorized
      headers:
        status:
          description: HTTP status code
          schema:
            $ref: '#/components/headers/status'
        x-document-date-time:
          description: Document creation timestamp
          schema:
            $ref: '#/components/headers/x-document-date-time'
        x-document-identification:
          description: Document unique identification
          schema:
            $ref: '#/components/headers/x-document-identification'
        x-original-document-identification:
          description: Request document unique identification
          schema:
            $ref: '#/components/headers/x-document-identification'
        WWW-Authenticate:
          description: The required authentication method should be used to gain access to the resource
          schema:
            $ref: '#/components/headers/WWW-Authenticate'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/unauthorized'
    forbidden:
      description: Forbidden
      headers:
        status:
          description: HTTP status code
          schema:
            $ref: '#/components/headers/status'
        x-document-date-time:
          description: Document creation timestamp
          schema:
            $ref: '#/components/headers/x-document-date-time'
        x-document-identification:
          description: Document unique identification
          schema:
            $ref: '#/components/headers/x-document-identification'
        x-original-document-identification:
          description: Request document unique identification
          schema:
            $ref: '#/components/headers/x-document-identification'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/forbidden'
    notFound:
      description: Not found
      headers:
        status:
          description: HTTP status code
          schema:
            $ref: '#/components/headers/status'
        x-document-date-time:
          description: Document creation timestamp
          schema:
            $ref: '#/components/headers/x-document-date-time'
        x-document-identification:
          description: Document unique identification
          schema:
            $ref: '#/components/headers/x-document-identification'
        x-original-document-identification:
          description: Request document unique identification
          schema:
            $ref: '#/components/headers/x-document-identification'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/notFound'
    unprocessableEntity:
      description: Unprocessable entity
      headers:
        status:
          description: HTTP status code
          schema:
            $ref: '#/components/headers/status'
        x-document-date-time:
          description: Document creation timestamp
          schema:
            $ref: '#/components/headers/x-document-date-time'
        x-document-identification:
          description: Document unique identification
          schema:
            $ref: '#/components/headers/x-document-identification'
        x-original-document-identification:
          description: Request document unique identification
          schema:
            $ref: '#/components/headers/x-document-identification'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/unprocessableEntity'
servers:
  - url: https://test-newavp.elering.ee
security:
  - JWTAuth: []